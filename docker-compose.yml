version: "3.9"
services:
  mysql:
    image: mysql:latest
    container_name: mysql_container
    environment:
      MYSQL_ROOT_PASSWORD: "123123"       # Root user password
      MYSQL_USER: "admin"                # Non-root user
      MYSQL_PASSWORD: "123123"           # Non-root user password
      MYSQL_DATABASE: "go_database"      # Initial database
    ports:
      - '33306:3306'
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u root -p123123 --silent"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis_container
    ports:
      - '6331:6379'
    volumes:
      - redis_data:/data

  base_go_be:
    container_name: base_go_be
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8002:8386"

#  kafka:
#    image: 'bitnami/kafka:latest'
#    container_name: kafka_container
#    ports:
#      - '9092:9092'
#    environment:
#      - KAFKA_CFG_NODE_ID=0
#      - KAFKA_CFG_PROCESS_ROLES=controller,broker
#      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
#      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
#      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@localhost:9093
#      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
#      - KAFKA_CFG_LOG_DIRS=/tmp/kafka-logs
#    volumes:
#      - kafka-data:/bitnami/kafka


volumes:
  mysql_data:
  redis_data:
  kafka-data:
